@use 'config' as *;
@use 'fonts' as *;
@use 'containers' as *;

html,
body {
    font-size: $dflt-font-size;
    font-family: $font-family;
    @extend %font-regular;
    @extend %margin-padding-0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
span,
article {
    @extend %margin-padding-0;
}

h1 {
    font-size: 3.5rem;
    @extend %font-bold;

}

h2,
.tagline {
    font-size: 2.5rem;
    @extend %font-regular;
}

h3 {
    font-size: 2rem;
    @extend %font-bold;
}


h4,
h5,
h6 {
    font-size: 2rem;
    @extend %font-regular;
}

p,
span,
article {
    font-size: 1.6rem;
}

img {
    width: 100%;
    height: 600px;
    object-fit: cover;
    object-position: center center;

    @include responsive($md) {
        height: 200px;

    }

    @include responsive($lg) {
        height: 300px;

    }

    @include responsive($xl) {
        height: 400px;

    }
}


/** Animations **/

%fade-in {
    animation: .3s ease-in-out both fade-in;
    -o-animation: .3s ease-in-out both fade-in;
    -moz-animation: .3s ease-in-out both fade-in;
    -webkit-animation: .3s ease-in-out both fade-in;
}

@keyframes fade-in {
    0% {
        opacity: 0;
    }

    100% {
        opacity: 1;
    }
}

/**
** Buttons
**/
button,
input[type="submit"],
input[type="reset"] {
    background: none;
    color: inherit;
    border: none;
    margin: 0;
    padding: 0;
    font: inherit;
    cursor: pointer;
    outline: inherit;
}

.btn-rounded {
    @include radiusStyle(25);
}

.btn {
    @extend .display-flex;
    align-self: center;
    @extend %font-regular;
    width: 250px;
    height: 50px;
    justify-content: center;
    align-content: center;
    font-size: 16px;
    color: white;
    margin: 5px 0;

    &:hover {
        cursor: pointer;
        transition: all 0.4s;
    }


}

.btn-primary {
    @extend .btn;
    border: 1px solid $primary-color;
    background-color: $primary-color;

    &:hover,
    &:active {
        @extend %font-regular;
        background-color: white;
        color: $primary-color !important;
    }
}

.btn-secondary {
    @extend .btn;
    border: 1px solid $secondary-color;
    background-color: $secondary-color;

    &:hover,
    &:active {
        @extend %font-regular;
        background-color: white;
        color: $secondary-color !important;
    }
}

/**
* I’m using 9 placeholder elements so I set the loop to stop at 9
* and I’ve chosen an animation-delay which is based on 9. Because of
* this the animation will have a consistent rhythm and by the 9th nth-child
* the delay will be 0.5s (half the duration of this animation).
*/
@mixin fadeInAnimation($className) {

    @for $i from 1 through 9 {
        #{$className} {

            &:nth-child(#{$i}) {

                animation-delay: $i * (1s / 18);
            }
        }
    }
}

//Animation for containers columns
div.col {
    @extend %fade-in;
    @include fadeInAnimation('&');
}